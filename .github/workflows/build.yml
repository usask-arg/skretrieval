name: 'build'

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'
  release:
    types:
      - published

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true


jobs:
  build-upload-conda-skretrieval:
    runs-on: ${{ matrix.os }}
    if: (github.event_name == 'release') && (!github.event.release.prerelease)

    environment:
      name: conda
      url: https://anaconda.org/usask-arg/skretrieval
    permissions:
      id-token: write

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target_plat: x86_64
          - os: windows-latest
            target_plat: x86_64
          - os: macos-11
            target_plat: x86_64
          - os: macos-11
            target_plat: arm

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup Conda build environment
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: ci/conda-envs/mamba-build.yml

      - name: Set conda upload
        shell: bash -el {0}
        run: |
          conda config --set anaconda_upload yes

      - name: Build Conda package
        shell: bash -el {0}
        if: (matrix.target_plat == 'x86_64')
        run: |
          conda mambabuild conda.recipe --output-folder pkgs/ --user usask-arg --token ${{ secrets.TOKEN }}

      - name: Build Conda package (cross mac arm)
        shell: bash -el {0}
        if: (matrix.target_plat == 'arm') && (matrix.os == 'macos-11')
        run: |
          conda mambabuild conda.recipe -m conda.recipe/osx_arm64_.yaml --output-folder pkgs/ --no-test --user usask-arg --token ${{ secrets.TOKEN }}

      - name: Save conda package
        uses: actions/upload-artifact@v3
        with:
          name: skretrieval-conda-${{ matrix.os }}-${{ matrix.target_plat }}
          path: pkgs

  build-conda-pysasktran2:
    runs-on: ${{ matrix.os }}
    if: ((github.event_name == 'release') && (github.event.release.prerelease)) || (github.event_name == 'schedule')

    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            target_plat: x86_64
          - os: windows-latest
            target_plat: x86_64
          - os: macos-11
            target_plat: x86_64
          - os: macos-11
            target_plat: arm

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: true

      - name: Setup Conda build environment
        uses: mamba-org/setup-micromamba@v1
        with:
          environment-file: ci/conda-envs/mamba-build.yml

      - name: Build Conda package
        shell: bash -el {0}
        if: (matrix.target_plat == 'x86_64')
        run: |
          conda mambabuild conda.recipe --output-folder pkgs/

      - name: Build Conda package (cross mac arm)
        shell: bash -el {0}
        if: (matrix.target_plat == 'arm') && (matrix.os == 'macos-11')
        run: |
          conda mambabuild conda.recipe -m conda.recipe/osx_arm64_.yaml --output-folder pkgs/ --no-test

      - name: Save conda package
        uses: actions/upload-artifact@v3
        with:
          name: skretrieval-conda-${{ matrix.os }}-${{ matrix.target_plat }}
          path: pkgs

  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - name: Build SDist
        run: pipx run build --sdist

      - name: Check metadata
        run: pipx run twine check dist/*

      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  build_wheels_cibuildwheel:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-11, windows-latest ]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: true

      - name: Build wheels all
        uses: pypa/cibuildwheel@v2.16.2
        env:
          CIBW_SKIP: "pp* *musllinux* cp37-* cp38-* cp39-*"
        with:
          output-dir: wheelhouse

      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  upload_wheels_test:
    runs-on: ubuntu-latest
    needs: [build_wheels_cibuildwheel, build_sdist]
    environment:
      name: testpypi
      url: https://test.pypi.org/p/skretrieval
    permissions:
      id-token: write
    if: (github.event_name == 'release') && (github.event.release.prerelease)
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Publish package to TestPyPI
        uses: pypa/gh-action-pypi-publish@v1.8.7
        with:
          repository-url: https://test.pypi.org/legacy/
          verbose: true

  upload_wheels:
    runs-on: ubuntu-latest
    needs: [build_wheels_cibuildwheel, build_sdist]
    environment:
      name: pypi
      url: https://pypi.org/p/skretrieval
    permissions:
      id-token: write
    if: (github.event_name == 'release') && (!github.event.release.prerelease)
    steps:
      - uses: actions/setup-python@v4
        with:
          python-version: "3.x"

      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist

      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@v1.8.7
        with:
          verbose: true
